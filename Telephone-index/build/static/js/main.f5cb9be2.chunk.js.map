{"version":3,"sources":["services/persons.js","Alarms/success.js","Alarms/info.js","Alarms/warning.js","Alarms/error.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","create","newObj","a","request","axios","post","response","data","getAll","get","delPerson","pointer","delete","update","id","newObject","put","catch","error","console","log","Success","success","className","role","Info","info","Warning","warning","Error","Filter","props","htmlFor","type","name","placeholder","onChange","handleFilterChange","value","filter","PersonForm","action","method","onSubmit","handleSubmit","handleNameChange","newName","required","handleNumberChange","newNumber","Numbers","scope","filterNames","map","x","number","onClick","deletePerson","xmlns","width","height","fill","viewBox","d","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setWarning","setSuccess","setInfo","setError","getPersonData","personService","then","initialPersons","useEffect","e","target","preventDefault","copyOfPersons","includes","findPerson","window","confirm","updatedPersons","setTimeout","newPersons","concat","toUpperCase","obj","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5cb9be2.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst create = async newObj => {\n  const request = axios.post(baseUrl, newObj)\n  const response = await request\n  return response.data\n}\n\nconst getAll = async () => {\n  const request = axios.get(baseUrl)\n  const response = await request\n  return response.data\n}\n\nconst delPerson = pointer => {\n  return axios.delete(`${baseUrl}/${pointer}`)\n}\n\nconst update = async (id, newObject) => {\n  const request = axios\n    .put(`${baseUrl}/${id}`, newObject)\n    .catch(error => {\n      console.log(error)\n    })\n  const response = await request\n  return response.data\n}\n\nexport default {\n  create: create,\n  getAll: getAll,\n  delPerson: delPerson,\n  update: update\n}","import React from 'react'\n\n\nconst Success = ({ success }) => (\n  <div\n    className={`alert alert-success my-3 ${success ? 'alert-shown' : 'alert-hidden'}`}\n    //onTransitionEnd={() => setSuccess(false)}\n    role=\"alert\">\n        Telephone number succesfully added!\n  </div>\n)\n/*\nSuccess.propTypes = {\n  error: PropTypes.bool\n}\n*/\nexport default Success","import React from 'react'\n\n\nconst Info = ({ info }) => (\n  <div\n    className={`alert alert-primary my-3 ${info ? 'alert-shown' : 'alert-hidden'}`}\n    //onTransitionEnd={() => setInfo(false)}\n    role=\"alert\">\n        Telephone number changed\n  </div>\n)\n/*\nInfo.propTypes = {\n  error: PropTypes.bool\n}\n*/\nexport default Info","import React from 'react'\n\n\nconst Warning = ({ warning }) => (\n  <div\n    className={`alert alert-danger my-3 ${warning ? 'alert-shown' : 'alert-hidden'}`}\n    //onTransitionEnd={() => setWarning(false)}\n    role=\"alert\">\n        Telephone number deleted\n  </div>\n)\n/*\nWarning.propTypes = {\n  error: PropTypes.bool\n}\n*/\nexport default Warning","import React from 'react'\n\n\nconst Error = ({ error }) => (\n  <div\n    className={`alert alert-danger my-3 ${error ? 'alert-shown' : 'alert-hidden'}`}\n    //onTransitionEnd={() => setWarning(false)}\n    role=\"alert\">\n        Telephone number have already been deleted\n  </div>\n)\n/*\nError.propTypes = {\n  error: PropTypes.bool\n}\n*/\nexport default Error","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Success from './Alarms/success'\nimport Info from './Alarms/info'\nimport Warning from './Alarms/warning'\nimport Error from './Alarms/error'\n// import PropTypes from 'prop-types'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ warning, setWarning ] = useState(false)\n  const [ success, setSuccess ] = useState(false)\n  const [ info, setInfo ] = useState(false)\n  const [ error, setError ] = useState(false)\n\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    let copyOfPersons = [...persons]\n    if (copyOfPersons.map(x => x = x.name).includes(newName)) {\n      let findPerson = copyOfPersons.filter(x => x.name === newName)[0]\n      if (window.confirm(`${newName} is already in the list. Do you want to assign new telephone number?`)) {\n        personService\n          .update(findPerson.id, { name: newName, number: newNumber, id: findPerson.id })\n          .then(updatedPersons => {\n            console.log('updatedPerson: ', updatedPersons)\n            //copyOfPersons[findPerson.id - 1] = updatedPersons;\n            setPersons(updatedPersons)\n            setInfo(true)\n            setTimeout(() => {\n              setInfo(false)\n            }, 2000)\n          })\n          .catch(error => {\n            console.log(error)\n          })\n          .then(() => {\n            getPersonData()\n            setError(true)\n            setTimeout(() => {\n              setError(false)\n            }, 2000)\n          })\n      }\n\n    } else if (!copyOfPersons.map(x => x = x.name).includes(newName)) {\n      let newObj = { name: newName, number: newNumber }\n      personService\n        .create(newObj)\n        .then(newPersons => {\n          setPersons(copyOfPersons.concat(newPersons))\n        })\n        .catch(error => {\n          console.log(error.response.data)\n        })\n      setSuccess(true)\n      setTimeout(() => {\n        setSuccess(false)\n      }, 2000)\n    }\n  }\n\n\n\n  function getPersonData() {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled')\n        setPersons(initialPersons)\n      })\n  }\n\n\n  function deletePerson(pointer) {\n    let obj = persons.filter(x => x.id === pointer)[0]\n    if (window.confirm(`Delete ${obj.name}`)) {\n      personService\n        .delPerson(pointer)\n        .then(() => getPersonData())\n\n      setWarning(true)\n      setTimeout(() => {\n        setWarning(false)\n      }, 2000)\n    }\n  }\n\n  useEffect(() => {\n    getPersonData()\n  }, [])\n\n\n  function filterNames() {\n    let copyOfPersons = [...persons]\n    // console.log(\"persons in filter function\", copyOfPersons)\n    let newList = copyOfPersons.filter(x => x = x.name.toUpperCase().includes(filter.toUpperCase()))\n    return newList\n  }\n\n  function handleNameChange(e) {\n    setNewName(e.target.value)\n  }\n\n  function handleNumberChange(e) {\n    setNewNumber(e.target.value)\n  }\n\n  function handleFilterChange(e) {\n    setFilter(e.target.value)\n  }\n\n  return (\n    <div className='container my-3'>\n      <h2>Phonebook</h2>\n      <Filter handleFilterChange={handleFilterChange} filter={filter} />\n      {success\n        ? <Success success={success} setSuccess={setSuccess} />\n        : warning\n          ? <Warning warning={warning} setWarning={setWarning} />\n          : info\n            ? <Info info={info} setInfo={setInfo} />\n            : error\n              ? <Error error={error} setError={setError} />\n              : ''\n      }\n      <h2 className='my-3'>Add new</h2>\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}/>\n      <h2>Numbers</h2>\n      <Numbers filterNames={filterNames()} deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nconst Filter = (props) => (\n  <form>\n    <div>\n      <label htmlFor='filter' className='my-3 sr-only'></label>\n      <input\n        type='text'\n        name='filter'\n        placeholder='filter names'\n        onChange={props.handleFilterChange}\n        value={props.filter}\n      />\n    </div>\n  </form>\n)\n\nconst PersonForm = (props) => (\n  <form action=\"api/persons\" method=\"post\" onSubmit={props.handleSubmit}>\n    <div className='my-3'>\n      <label htmlFor='text' className='sr-only'></label>\n      <input\n        id=\"text\"\n        type='text'\n        name='text'\n        placeholder='name'\n        onChange={props.handleNameChange}\n        value={props.newName}\n        required/>\n    </div>\n    <div className='my-2'>\n      <label htmlFor='tel' className='sr-only'></label>\n      <input\n        id=\"tel\"\n        type='tel'\n        name='tel'\n        placeholder='telephone number'\n        onChange={props.handleNumberChange}\n        value={props.newNumber}\n        required/>\n    </div>\n    <div>\n      <button type=\"submit\" className='btn btn-primary m-2'>add</button>\n    </div>\n  </form>\n)\n\nconst Numbers = (props) => (\n  <table className='table table-striped'>\n    <thead>\n      <tr>\n        <th scope='col'>#</th>\n        <th scope='col'>Name</th>\n        <th scope='col'>Number</th>\n        <th scope='col'>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      {props.filterNames.map(x =>\n        <tr key={x.id}>\n          <th scope='row'>{x.id}</th>\n          <td>{x.name}</td>\n          <td>{x.number}</td>\n          <td>\n            <button className='btn btn-outline-danger' onClick={() => props.deletePerson(x.id)}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-x\" viewBox=\"0 0 16 16\">\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n              </svg>\n            </button>\n          </td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n)\n/*\nApp.propTypes = {\n  error: PropTypes.bool,\n  info: PropTypes.bool,\n  success: PropTypes.bool,\n  warning: PropTypes.bool,\n  handleFilterChange: PropTypes.any,\n  filter: PropTypes.any,\n  handleSubmit: PropTypes.any,\n  handleNameChange: PropTypes.any,\n  newName: PropTypes.any,\n  handleNumberChange: PropTypes.any,\n  newNumber: PropTypes.any,\n  filterNames: PropTypes.any,\n  deletePerson: PropTypes.any\n}\n*/\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}