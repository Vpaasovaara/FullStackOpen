{"ast":null,"code":"var _jsxFileName = \"/home/ville/koodaus/fullStackOpen/Patientor_new/patientor-frontend/src/components/Content.tsx\";\nimport { NormalPart } from './Parts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Content = props => {\n  props.courseParts.map(part => {\n    switch (part.type) {\n      case 'normal':\n        return /*#__PURE__*/_jsxDEV(NormalPart, {\n          part: part\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }, this);\n    }\n  });\n};\n\n_c = Content;\nexport default Content;\n/*return (\n       <div>\n           {props.courseParts.map((part: any) => {\n               switch (part.name) {\n                 case 'Fundamentals':\n                   return (<div>\n                     <p>{part.name} <b>{part.exerciseCount}</b><br/>{part.description}</p>\n                   </div>);\n                 case 'Advanced':\n                   return (<div>\n                     <p>{part.name} <b>{part.exerciseCount}</b><br/>{part.description}</p>\n                   </div>);\n                 case 'Using props to pass data':\n                   return (<div>\n                     <p>{part.name} <b>{part.exerciseCount}</b></p>\n                   </div>);\n                 case 'Deeper type usage':\n                   return (<div>\n                     <p>{part.name} <b>{part.exerciseCount}</b><br/>{part.description}<br/>{part.exerciseSubmissionLink}</p>\n                   </div>);\n               }\n             }\n           )}\n       </div>\n       \n   )*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/ville/koodaus/fullStackOpen/Patientor_new/patientor-frontend/src/components/Content.tsx"],"names":["NormalPart","Content","props","courseParts","map","part","type"],"mappings":";AACA,SAASA,UAAT,QAAwD,SAAxD;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAyB;AAGvCA,EAAAA,KAAK,CAACC,WAAN,CAAkBC,GAAlB,CAAuBC,IAAD,IAAsB;AAC1C,YAAQA,IAAI,CAACC,IAAb;AACE,WAAK,QAAL;AACE,4BAAQ,QAAC,UAAD;AAAY,UAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAAR;AAFJ;AAID,GALD;AAQD,CAXD;;KAAMJ,O;AAgBN,eAAeA,OAAf;AAGC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { CoursePart } from \"../types\";\nimport { NormalPart, ProjectPart, SubmissionPart } from './Parts'\n\nconst Content = (props: ContentProps) => {\n\n\n  props.courseParts.map((part: CoursePart) => {\n    switch (part.type) {\n      case 'normal':\n        return (<NormalPart part={part}/>)\n    }\n  })\n\n\n}\ninterface ContentProps {\n    courseParts: Array<CoursePart>;\n}\n\nexport default Content;\n\n\n /*return (\n        <div>\n            {props.courseParts.map((part: any) => {\n                switch (part.name) {\n                  case 'Fundamentals':\n                    return (<div>\n                      <p>{part.name} <b>{part.exerciseCount}</b><br/>{part.description}</p>\n                    </div>);\n                  case 'Advanced':\n                    return (<div>\n                      <p>{part.name} <b>{part.exerciseCount}</b><br/>{part.description}</p>\n                    </div>);\n                  case 'Using props to pass data':\n                    return (<div>\n                      <p>{part.name} <b>{part.exerciseCount}</b></p>\n                    </div>);\n                  case 'Deeper type usage':\n                    return (<div>\n                      <p>{part.name} <b>{part.exerciseCount}</b><br/>{part.description}<br/>{part.exerciseSubmissionLink}</p>\n                    </div>);\n                }\n              }\n            )}\n        </div>\n        \n    )*/"]},"metadata":{},"sourceType":"module"}