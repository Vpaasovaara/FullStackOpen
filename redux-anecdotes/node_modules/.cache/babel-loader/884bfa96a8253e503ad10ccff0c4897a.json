{"ast":null,"code":"var _jsxFileName = \"/home/ville/koodaus/fullStackOpen/redux-anecdotes/src/components/Filter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { filter } from '../reducers/filterReducer';\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(filter(event.target.value));\n  };\n\n  const style = {\n    marginBottom: 10\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: [\"filter \", /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filter, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/home/ville/koodaus/fullStackOpen/redux-anecdotes/src/components/Filter.js"],"names":["React","filter","useDispatch","Filter","dispatch","handleChange","event","target","value","style","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;;AAEA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,QAAQ,CAACH,MAAM,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CAAR;AACD,GAFD;;AAGA,QAAMC,KAAK,GAAG;AACZC,IAAAA,YAAY,EAAE;AADF,GAAd;AAIA,sBACE;AAAK,IAAA,KAAK,EAAED,KAAZ;AAAA,uCACS;AAAO,MAAA,QAAQ,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YADT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;GAAMF,M;UAEaD,W;;;KAFbC,M;AAkBN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { filter } from '../reducers/filterReducer'\nimport { useDispatch } from \"react-redux\";\n\nconst Filter = () => {\n\n  const dispatch = useDispatch()\n\n  const handleChange = (event) => {\n    dispatch(filter(event.target.value))\n  }\n  const style = {\n    marginBottom: 10\n  }\n\n  return (\n    <div style={style}>\n      filter <input onChange={handleChange} />\n    </div>\n  )\n}\n\nexport default Filter"]},"metadata":{},"sourceType":"module"}