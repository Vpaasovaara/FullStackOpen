{"ast":null,"code":"// 6.10 anekdootit, step8\nconst notificationReducer = (state = 'This is a notification', action) => {\n  switch (action.type) {\n    case 'NOTIFICATION_SET':\n      return action.notification;\n\n    case 'NOTIFICATION_FADE':\n      return action.notification;\n\n    default:\n      return state;\n  }\n};\n\nexport const notificationSet = (content, time) => {\n  return dispatch => {\n    dispatch({\n      type: 'NOTIFICATION_SET',\n      notification: {\n        content: `${content}`,\n        visible: true\n      }\n    });\n    notificationFade(time);\n  };\n};\nexport const notificationFade = time => {\n  setTimeout(() => {\n    return {\n      type: 'NOTIFICATION_FADE',\n      notification: {\n        visible: false\n      }\n    };\n  }, time);\n  /*return { type: 'NOTIFICATION_FADE',\n  notification: {\n      visible: false\n  }*/\n};\nexport default notificationReducer;","map":{"version":3,"sources":["/home/ville/koodaus/fullStackOpen/redux-anecdotes/src/reducers/notificationReducer.js"],"names":["notificationReducer","state","action","type","notification","notificationSet","content","time","dispatch","visible","notificationFade","setTimeout"],"mappings":"AAGA;AACA,MAAMA,mBAAmB,GAAG,CAACC,KAAK,GAAG,wBAAT,EAAmCC,MAAnC,KAA8C;AACtE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,aAAOD,MAAM,CAACE,YAAd;;AACJ,SAAK,mBAAL;AACI,aAAOF,MAAM,CAACE,YAAd;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH,CATD;;AAWA,OAAO,MAAMI,eAAe,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAC9C,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAE,kBADD;AAELC,MAAAA,YAAY,EAAE;AACVE,QAAAA,OAAO,EAAG,GAAEA,OAAQ,EADV;AAEVG,QAAAA,OAAO,EAAE;AAFC;AAFT,KAAD,CAAR;AAOAC,IAAAA,gBAAgB,CAACH,IAAD,CAAhB;AACH,GATD;AAUH,CAXM;AAaP,OAAO,MAAMG,gBAAgB,GAAIH,IAAD,IAAU;AAClCI,EAAAA,UAAU,CAAC,MAAM;AACb,WAAQ;AACJR,MAAAA,IAAI,EAAE,mBADF;AAEJC,MAAAA,YAAY,EAAE;AACVK,QAAAA,OAAO,EAAE;AADC;AAFV,KAAR;AAMH,GAPS,EAOPF,IAPO,CAAV;AAQJ;AACJ;AACA;AACA;AACC,CAbM;AAgBP,eAAeP,mBAAf","sourcesContent":["\n\n\n// 6.10 anekdootit, step8\nconst notificationReducer = (state = 'This is a notification', action) => {\n    switch (action.type) {\n        case 'NOTIFICATION_SET':\n            return action.notification\n        case 'NOTIFICATION_FADE':\n            return action.notification\n        default:\n            return state\n    }\n}\n\nexport const notificationSet = (content, time) => {\n    return dispatch => {\n        dispatch({\n            type: 'NOTIFICATION_SET',\n            notification: { \n                content: `${content}`,\n                visible: true\n            }\n        })\n        notificationFade(time)\n    }\n}\n\nexport const notificationFade = (time) => {\n        setTimeout(() => {\n            return ({\n                type: 'NOTIFICATION_FADE',\n                notification: {\n                    visible: false\n                }\n            })\n        }, time)\n    /*return { type: 'NOTIFICATION_FADE',\n    notification: {\n        visible: false\n    }*/    \n}\n\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}