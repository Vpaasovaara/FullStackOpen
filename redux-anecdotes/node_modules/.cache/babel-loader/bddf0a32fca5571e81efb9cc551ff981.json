{"ast":null,"code":"import anecdoteService from '../services/anecdotes';\n\nconst asObject = anecdote => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  };\n}; // 6.6: anekdootit, step4\n\n\nexport const increment = content => {\n  return async dispatch => {\n    const updatedAnecdote = await anecdoteService.update(content);\n    dispatch({\n      type: 'INCREMENT',\n      content: updatedAnecdote\n    });\n  };\n};\nexport const newAnecdote = content => {\n  return {\n    type: 'NEW_ANECDOTE',\n    content: content\n  };\n}; // 6.16 anekdootit ja backend, step4\n\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch({\n      type: 'INIT_ANECDOTES',\n      content: anecdotes\n    });\n  };\n};\n\nconst anecdoteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('state now: ', state);\n  console.log('action', action);\n  let copy = [...state];\n\n  switch (action.type) {\n    // 6.3: anekdootit, step1\n    case 'INCREMENT':\n      let obj = copy.find(X => X.id == action.content.id);\n      if (obj) obj = action.content;\n      return copy.sort((a, b) => {\n        return b.votes - a.votes;\n      });\n    // 6.4: anekdootit, step2\n\n    case 'NEW_ANECDOTE':\n      return state.concat(action.content);\n\n    case 'INIT_ANECDOTES':\n      return action.content;\n\n    default:\n      return state;\n  }\n};\n\nexport default anecdoteReducer;","map":{"version":3,"sources":["/home/ville/koodaus/fullStackOpen/redux-anecdotes/src/reducers/anecdoteReducer.js"],"names":["anecdoteService","asObject","anecdote","content","id","getId","votes","increment","dispatch","updatedAnecdote","update","type","newAnecdote","initializeAnecdotes","anecdotes","getAll","anecdoteReducer","state","action","console","log","copy","obj","find","X","sort","a","b","concat"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B;;AAGA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7B,SAAO;AACLC,IAAAA,OAAO,EAAED,QADJ;AAELE,IAAAA,EAAE,EAAEC,KAAK,EAFJ;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAAP;AAKD,CAND,C,CAQA;;;AACA,OAAO,MAAMC,SAAS,GAAIJ,OAAD,IAAa;AACpC,SAAO,MAAMK,QAAN,IAAkB;AACvB,UAAMC,eAAe,GAAG,MAAMT,eAAe,CAACU,MAAhB,CAAuBP,OAAvB,CAA9B;AACAK,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,WADC;AAEPR,MAAAA,OAAO,EAAEM;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAMG,WAAW,GAAIT,OAAD,IAAa;AACtC,SAAO;AAAEQ,IAAAA,IAAI,EAAE,cAAR;AAAwBR,IAAAA,OAAO,EAAEA;AAAjC,GAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMU,mBAAmB,GAAG,MAAM;AACvC,SAAO,MAAML,QAAN,IAAkB;AACvB,UAAMM,SAAS,GAAG,MAAMd,eAAe,CAACe,MAAhB,EAAxB;AACAP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,gBADC;AAEPR,MAAAA,OAAO,EAAEW;AAFF,KAAD,CAAR;AAID,GAND;AAOD,CARM;;AAWP,MAAME,eAAe,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AAEA,MAAIG,IAAI,GAAG,CAAC,GAAGJ,KAAJ,CAAX;;AAEA,UAAQC,MAAM,CAACP,IAAf;AACE;AACA,SAAK,WAAL;AACE,UAAIW,GAAG,GAAGD,IAAI,CAACE,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACpB,EAAF,IAAQc,MAAM,CAACf,OAAP,CAAeC,EAAtC,CAAV;AACA,UAAIkB,GAAJ,EAASA,GAAG,GAAGJ,MAAM,CAACf,OAAb;AACP,aAAOkB,IAAI,CAACI,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,eAAOA,CAAC,CAACrB,KAAF,GAAUoB,CAAC,CAACpB,KAAnB;AACD,OAFM,CAAP;AAGJ;;AACA,SAAK,cAAL;AACE,aAAOW,KAAK,CAACW,MAAN,CAAaV,MAAM,CAACf,OAApB,CAAP;;AACF,SAAK,gBAAL;AACE,aAAOe,MAAM,CAACf,OAAd;;AACF;AACE,aAAOc,KAAP;AAdJ;AAgBD,CAtBD;;AA0BA,eAAeD,eAAf","sourcesContent":["import anecdoteService from '../services/anecdotes'\n\n\nconst asObject = (anecdote) => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  }\n}\n\n// 6.6: anekdootit, step4\nexport const increment = (content) => {\n  return async dispatch => {\n    const updatedAnecdote = await anecdoteService.update(content)\n    dispatch({\n      type: 'INCREMENT',\n      content: updatedAnecdote\n    })\n  }\n}\n\nexport const newAnecdote = (content) => {\n  return { type: 'NEW_ANECDOTE', content: content }\n}\n\n// 6.16 anekdootit ja backend, step4\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll()\n    dispatch({\n      type: 'INIT_ANECDOTES',\n      content: anecdotes\n    })\n  }\n}\n\n\nconst anecdoteReducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n\n  let copy = [...state]\n\n  switch (action.type) {\n    // 6.3: anekdootit, step1\n    case 'INCREMENT':\n      let obj = copy.find(X => X.id == action.content.id)\n      if (obj) obj = action.content\n        return copy.sort((a, b) => {\n          return b.votes - a.votes\n        })\n    // 6.4: anekdootit, step2\n    case 'NEW_ANECDOTE':\n      return state.concat(action.content)\n    case 'INIT_ANECDOTES':\n      return action.content\n    default:\n      return state\n  }\n}\n\n\n\nexport default anecdoteReducer"]},"metadata":{},"sourceType":"module"}