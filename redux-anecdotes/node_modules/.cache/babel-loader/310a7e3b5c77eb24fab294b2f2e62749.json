{"ast":null,"code":"// 6.10 anekdootit, step8\nconst notificationReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'This is a notification';\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  notificationFade();\n\n  switch (action.type) {\n    case 'NOTIFICATION_SET':\n      return action.notification;\n\n    case 'NOTIFICATION_FADE':\n      return action.notification;\n\n    default:\n      return state;\n  }\n};\n\nexport const notificationSet = (content, time) => {\n  return dispatch => {\n    dispatch({\n      type: 'NOTIFICATION_SET',\n      notification: {\n        content: `${content}`,\n        visible: true\n      }\n    });\n  };\n};\nexport const notificationFade = time => {\n  setTimeout(() => {\n    return {\n      type: 'NOTIFICATION_FADE',\n      notification: {\n        visible: false\n      }\n    };\n  }, 1000);\n};\nexport default notificationReducer;","map":{"version":3,"sources":["/home/ville/koodaus/fullStackOpen/redux-anecdotes/src/reducers/notificationReducer.js"],"names":["notificationReducer","state","action","notificationFade","type","notification","notificationSet","content","time","dispatch","visible","setTimeout"],"mappings":"AAGA;AACA,MAAMA,mBAAmB,GAAG,YAA8C;AAAA,MAA7CC,KAA6C,uEAArC,wBAAqC;AAAA,MAAXC,MAAW;AACtEC,EAAAA,gBAAgB;;AAChB,UAAQD,MAAM,CAACE,IAAf;AACI,SAAK,kBAAL;AACI,aAAOF,MAAM,CAACG,YAAd;;AACJ,SAAK,mBAAL;AACI,aAAOH,MAAM,CAACG,YAAd;;AACJ;AACI,aAAOJ,KAAP;AANR;AAQH,CAVD;;AAYA,OAAO,MAAMK,eAAe,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAC9C,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAE,kBADD;AAELC,MAAAA,YAAY,EAAE;AACVE,QAAAA,OAAO,EAAG,GAAEA,OAAQ,EADV;AAEVG,QAAAA,OAAO,EAAE;AAFC;AAFT,KAAD,CAAR;AAOH,GARD;AASH,CAVM;AAYP,OAAO,MAAMP,gBAAgB,GAAIK,IAAD,IAAU;AAClCG,EAAAA,UAAU,CAAC,MAAM;AACb,WAAQ;AACJP,MAAAA,IAAI,EAAE,mBADF;AAEJC,MAAAA,YAAY,EAAE;AACVK,QAAAA,OAAO,EAAE;AADC;AAFV,KAAR;AAMH,GAPS,EAOP,IAPO,CAAV;AASP,CAVM;AAaP,eAAeV,mBAAf","sourcesContent":["\n\n\n// 6.10 anekdootit, step8\nconst notificationReducer = (state = 'This is a notification', action) => {\n    notificationFade()\n    switch (action.type) {\n        case 'NOTIFICATION_SET':\n            return action.notification\n        case 'NOTIFICATION_FADE':\n            return action.notification\n        default:\n            return state\n    }\n}\n\nexport const notificationSet = (content, time) => {\n    return dispatch => {\n        dispatch({\n            type: 'NOTIFICATION_SET',\n            notification: { \n                content: `${content}`,\n                visible: true\n            }\n        })\n    }\n}\n\nexport const notificationFade = (time) => {\n        setTimeout(() => {\n            return ({\n                type: 'NOTIFICATION_FADE',\n                notification: {\n                    visible: false\n                }\n            })\n        }, 1000)\n  \n}\n\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}