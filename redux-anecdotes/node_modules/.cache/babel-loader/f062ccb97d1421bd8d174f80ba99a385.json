{"ast":null,"code":"import anecdoteReducer from \"./reducers/anecdoteReducer\";\nimport notificationReducer from \"./reducers/notificationReducer\";\nimport filterReducer from \"./reducers/filterReducer\";\nimport { composedWithDevTools } from 'redux-devtools-extension';\nimport { createStore, combineReducers } from 'redux';\nimport anecdoteService from './services/anecdotes';\nimport { useDispatch } from \"react-redux\";\nconst dispatch = useDispatch();\nconst reducer = combineReducers({\n  anecdotes: anecdoteReducer,\n  notification: notificationReducer,\n  filter: filterReducer\n});\nconst store = createStore(reducer, composedWithDevTools);\nanecdoteService.getAll().then(notes => notes.forEach(note => {\n  store.dispatch({\n    type: 'NEW_ANECDOTE',\n    content: note\n  });\n}));\nexport default store;","map":{"version":3,"sources":["/home/ville/koodaus/fullStackOpen/redux-anecdotes/src/store.js"],"names":["anecdoteReducer","notificationReducer","filterReducer","composedWithDevTools","createStore","combineReducers","anecdoteService","useDispatch","dispatch","reducer","anecdotes","notification","filter","store","getAll","then","notes","forEach","note","type","content"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,4BAA5B;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAEA,MAAME,OAAO,GAAGJ,eAAe,CAAC;AAC5BK,EAAAA,SAAS,EAAEV,eADiB;AAE5BW,EAAAA,YAAY,EAAEV,mBAFc;AAG5BW,EAAAA,MAAM,EAAEV;AAHoB,CAAD,CAA/B;AAMA,MAAMW,KAAK,GAAGT,WAAW,CAACK,OAAD,EAAUN,oBAAV,CAAzB;AAEAG,eAAe,CAACQ,MAAhB,GAAyBC,IAAzB,CAA8BC,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,IAAI,IAAI;AACzDL,EAAAA,KAAK,CAACL,QAAN,CAAe;AAAEW,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,OAAO,EAAEF;AAAjC,GAAf;AACH,CAFsC,CAAvC;AAIA,eAAeL,KAAf","sourcesContent":["import anecdoteReducer from \"./reducers/anecdoteReducer\"\nimport notificationReducer from \"./reducers/notificationReducer\"\nimport filterReducer from \"./reducers/filterReducer\"\nimport { composedWithDevTools } from 'redux-devtools-extension'\nimport { createStore, combineReducers } from 'redux'\nimport anecdoteService from './services/anecdotes'\nimport { useDispatch } from \"react-redux\"\n\nconst dispatch = useDispatch()\n\nconst reducer = combineReducers({\n    anecdotes: anecdoteReducer,\n    notification: notificationReducer,\n    filter: filterReducer\n})\n\nconst store = createStore(reducer, composedWithDevTools)\n\nanecdoteService.getAll().then(notes => notes.forEach(note => {\n    store.dispatch({ type: 'NEW_ANECDOTE', content: note })\n}))\n\nexport default store"]},"metadata":{},"sourceType":"module"}