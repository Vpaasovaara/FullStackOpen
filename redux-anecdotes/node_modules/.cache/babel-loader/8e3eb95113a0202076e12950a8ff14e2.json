{"ast":null,"code":"// 6.10 anekdootit, step8\nconst notificationReducer = (state = 'This is a notification', action) => {\n  switch (action.type) {\n    case 'NOTIFICATION_SET':\n      return action.notification;\n\n    case 'NOTIFICATION_FADE':\n      return action.notification;\n\n    default:\n      return state;\n  }\n};\n\nexport const notificationSet = content => {\n  return {\n    type: 'NOTIFICATION_SET',\n    notification: {\n      content: `${content}`,\n      visible: true\n    }\n  };\n};\nexport const notificationVote = content => {//dispatch({})\n\n  /*return { type: 'NOTIFICATION_VOTE',\n  notification: { \n      content: `You voted: ${content}`,\n      visible: true\n  }  \n  }*/\n};\nexport const notificationFade = () => {\n  return {\n    type: 'NOTIFICATION_FADE',\n    notification: {\n      visible: false\n    }\n  };\n};\nexport default notificationReducer;","map":{"version":3,"sources":["/home/ville/koodaus/fullStackOpen/redux-anecdotes/src/reducers/notificationReducer.js"],"names":["notificationReducer","state","action","type","notification","notificationSet","content","visible","notificationVote","notificationFade"],"mappings":"AAGA;AACA,MAAMA,mBAAmB,GAAG,CAACC,KAAK,GAAG,wBAAT,EAAmCC,MAAnC,KAA8C;AACtE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,aAAOD,MAAM,CAACE,YAAd;;AACJ,SAAK,mBAAL;AACI,aAAOF,MAAM,CAACE,YAAd;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH,CATD;;AAWA,OAAO,MAAMI,eAAe,GAAIC,OAAD,IAAa;AACxC,SAAO;AAAEH,IAAAA,IAAI,EAAE,kBAAR;AACPC,IAAAA,YAAY,EAAE;AACVE,MAAAA,OAAO,EAAG,GAAEA,OAAQ,EADV;AAEVC,MAAAA,OAAO,EAAE;AAFC;AADP,GAAP;AAMH,CAPM;AASP,OAAO,MAAMC,gBAAgB,GAAIF,OAAD,IAAa,CACzC;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACC,CATM;AAWP,OAAO,MAAMG,gBAAgB,GAAG,MAAM;AAClC,SAAO;AAAEN,IAAAA,IAAI,EAAE,mBAAR;AACPC,IAAAA,YAAY,EAAE;AACVG,MAAAA,OAAO,EAAE;AADC;AADP,GAAP;AAKH,CANM;AAQP,eAAeP,mBAAf","sourcesContent":["\n\n\n// 6.10 anekdootit, step8\nconst notificationReducer = (state = 'This is a notification', action) => {\n    switch (action.type) {\n        case 'NOTIFICATION_SET':\n            return action.notification\n        case 'NOTIFICATION_FADE':\n            return action.notification\n        default:\n            return state\n    }\n}\n\nexport const notificationSet = (content) => {\n    return { type: 'NOTIFICATION_SET', \n    notification: { \n        content: `${content}`,\n        visible: true\n    }\n  }\n}\n\nexport const notificationVote = (content) => {\n    //dispatch({})\n    \n    /*return { type: 'NOTIFICATION_VOTE',\n    notification: { \n        content: `You voted: ${content}`,\n        visible: true\n    }  \n  }*/\n}\n\nexport const notificationFade = () => {\n    return { type: 'NOTIFICATION_FADE',\n    notification: {\n        visible: false\n    }    \n}\n}\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}