{"ast":null,"code":"import anecdoteReducer, { newAnecdote, initializeAnecdotes } from \"./reducers/anecdoteReducer\";\nimport notificationReducer from \"./reducers/notificationReducer\";\nimport filterReducer from \"./reducers/filterReducer\";\nimport { composedWithDevTools } from 'redux-devtools-extension';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\nconst reducer = combineReducers({\n  anecdotes: anecdoteReducer,\n  notification: notificationReducer,\n  filter: filterReducer\n});\nconst store = createStore(reducer, composedWithDevTools(applyMiddleware(thunk)));\n/*anecdoteService.getAll().then(notes => notes.forEach(note => {\n    store.dispatch(newAnecdote(note))\n    console.log(note)\n}))*/\n\n/*anecdoteService.getAll().then(notes =>\n    store.dispatch(initializeAnecdotes(notes))\n)*/\n\nexport default store;","map":{"version":3,"sources":["/home/ville/koodaus/fullStackOpen/redux-anecdotes/src/store.js"],"names":["anecdoteReducer","newAnecdote","initializeAnecdotes","notificationReducer","filterReducer","composedWithDevTools","createStore","combineReducers","applyMiddleware","thunk","reducer","anecdotes","notification","filter","store"],"mappings":"AAAA,OAAOA,eAAP,IAA0BC,WAA1B,EAAuCC,mBAAvC,QAAkE,4BAAlE;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,MAAMC,OAAO,GAAGH,eAAe,CAAC;AAC5BI,EAAAA,SAAS,EAAEX,eADiB;AAE5BY,EAAAA,YAAY,EAAET,mBAFc;AAG5BU,EAAAA,MAAM,EAAET;AAHoB,CAAD,CAA/B;AAMA,MAAMU,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUL,oBAAoB,CAACG,eAAe,CAACC,KAAD,CAAhB,CAA9B,CAAzB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAeK,KAAf","sourcesContent":["import anecdoteReducer, { newAnecdote, initializeAnecdotes } from \"./reducers/anecdoteReducer\"\nimport notificationReducer from \"./reducers/notificationReducer\"\nimport filterReducer from \"./reducers/filterReducer\"\nimport { composedWithDevTools } from 'redux-devtools-extension'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from \"redux-thunk\"\n\n\nconst reducer = combineReducers({\n    anecdotes: anecdoteReducer,\n    notification: notificationReducer,\n    filter: filterReducer\n})\n\nconst store = createStore(reducer, composedWithDevTools(applyMiddleware(thunk)))\n\n/*anecdoteService.getAll().then(notes => notes.forEach(note => {\n    store.dispatch(newAnecdote(note))\n    console.log(note)\n}))*/\n\n/*anecdoteService.getAll().then(notes =>\n    store.dispatch(initializeAnecdotes(notes))\n)*/\n\nexport default store"]},"metadata":{},"sourceType":"module"}