{"ast":null,"code":"// 6.10 anekdootit, step8\nconst notificationReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'This is a notification';\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'NOTIFICATION_SET':\n      return action.notification;\n\n    case 'NOTIFICATION_FADE':\n      return action.notification;\n\n    default:\n      return state;\n  }\n};\n\nexport const notificationOn = (content, time) => {\n  notificationSet(content);\n  setTimeout(() => {\n    notificationFade();\n  }, time);\n};\n\nconst notificationSet = content => {\n  return {\n    type: 'NOTIFICATION_SET',\n    notification: {\n      content: `${content}`,\n      visible: true\n    }\n  };\n};\n\nconst notificationFade = () => {\n  return {\n    type: 'NOTIFICATION_FADE',\n    notification: {\n      visible: false\n    }\n  };\n};\n\nexport default notificationReducer;","map":{"version":3,"sources":["/home/ville/koodaus/fullStackOpen/redux-anecdotes/src/reducers/notificationReducer.js"],"names":["notificationReducer","state","action","type","notification","notificationOn","content","time","notificationSet","setTimeout","notificationFade","visible"],"mappings":"AAGA;AACA,MAAMA,mBAAmB,GAAG,YAA8C;AAAA,MAA7CC,KAA6C,uEAArC,wBAAqC;AAAA,MAAXC,MAAW;;AACtE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,aAAOD,MAAM,CAACE,YAAd;;AACJ,SAAK,mBAAL;AACI,aAAOF,MAAM,CAACE,YAAd;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH,CATD;;AAYA,OAAO,MAAMI,cAAc,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAC7CC,EAAAA,eAAe,CAACF,OAAD,CAAf;AACAG,EAAAA,UAAU,CAAC,MAAM;AACbC,IAAAA,gBAAgB;AACnB,GAFS,EAEPH,IAFO,CAAV;AAGH,CALM;;AAOP,MAAMC,eAAe,GAAIF,OAAD,IAAa;AACjC,SAAQ;AACJH,IAAAA,IAAI,EAAE,kBADF;AAEJC,IAAAA,YAAY,EAAE;AACVE,MAAAA,OAAO,EAAG,GAAEA,OAAQ,EADV;AAEVK,MAAAA,OAAO,EAAE;AAFC;AAFV,GAAR;AAOH,CARD;;AASA,MAAMD,gBAAgB,GAAG,MAAM;AAC3B,SAAQ;AACJP,IAAAA,IAAI,EAAE,mBADF;AAEAC,IAAAA,YAAY,EAAE;AACdO,MAAAA,OAAO,EAAE;AADK;AAFd,GAAR;AAMH,CAPD;;AAWA,eAAeX,mBAAf","sourcesContent":["\n\n\n// 6.10 anekdootit, step8\nconst notificationReducer = (state = 'This is a notification', action) => {\n    switch (action.type) {\n        case 'NOTIFICATION_SET':\n            return action.notification\n        case 'NOTIFICATION_FADE':\n            return action.notification\n        default:\n            return state\n    }\n}\n\n\nexport const notificationOn = (content, time) => {\n    notificationSet(content)\n    setTimeout(() => {\n        notificationFade()\n    }, time)\n}\n\nconst notificationSet = (content) => {\n    return ({\n        type: 'NOTIFICATION_SET',\n        notification: { \n            content: `${content}`,\n            visible: true\n        }\n    })\n}\nconst notificationFade = () => {      \n    return ({\n        type: 'NOTIFICATION_FADE',\n            notification: {\n            visible: false\n            }\n        })  \n}\n\n\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}